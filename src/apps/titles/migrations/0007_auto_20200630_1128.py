# Generated by Django 3.0.4 on 2020-06-30 08:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('titles', '0006_auto_20200630_1126'),
    ]

    operations = [
        migrations.CreateModel(
            name='TitleWatchOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WatchOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_episodes', models.CharField(blank=True, default='', max_length=10, verbose_name='общее кол-во эп.')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'TV сериал'), (2, 'полнометражный фильм'), (3, 'OVA'), (4, 'ONA'), (5, 'спешл')], null=True, verbose_name='type')),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2100), django.core.validators.MinValueValidator(1900)], verbose_name='year')),
                ('ordering', models.PositiveSmallIntegerField()),
                ('title', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='titles.Title')),
                ('title_watch_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='titles.TitleWatchOrder')),
            ],
            options={
                'ordering': ('ordering',),
            },
        ),
        migrations.AddField(
            model_name='titlewatchorder',
            name='titles',
            field=models.ManyToManyField(related_name='watch_orders', to='titles.WatchOrder'),
        ),
    ]
