# Generated by Django 3.1 on 2020-09-02 09:50

from django.db import migrations, models

from ..models import Title as TitleModel

replaces = {
    'inner_status': {
        '0': TitleModel.INNER_STATUSES.off,
        '1': TitleModel.INNER_STATUSES.moder,
        '2': TitleModel.INNER_STATUSES.slug,
        '3': TitleModel.INNER_STATUSES.on,
    },
    'status': {
        '1': TitleModel.STATUSES.released,
        '2': TitleModel.STATUSES.ongoing,
        '3': TitleModel.STATUSES.announce,
    },
    'year_season': {
        '1': TitleModel.YEAR_SEASONS.winter,
        '2': TitleModel.YEAR_SEASONS.spring,
        '3': TitleModel.YEAR_SEASONS.summer,
        '4': TitleModel.YEAR_SEASONS.autumn,
    },
    'source': {
        '1': TitleModel.SOURCES.manga,
        '2': TitleModel.SOURCES.manhwa,
        '3': TitleModel.SOURCES.game,
        '4': TitleModel.SOURCES.novel,
        '5': TitleModel.SOURCES.original,
        '6': TitleModel.SOURCES.book,
    },
    'type': {
        '1': TitleModel.TYPES.series,
        '2': TitleModel.TYPES.movie,
        '3': TitleModel.TYPES.ova,
        '4': TitleModel.TYPES.ona,
        '5': TitleModel.TYPES.special,
    },
    'release_day': {
        '1': TitleModel.RELEASE_DAYS.monday,
        '2': TitleModel.RELEASE_DAYS.tuesday,
        '3': TitleModel.RELEASE_DAYS.wednesday,
        '4': TitleModel.RELEASE_DAYS.thursday,
        '5': TitleModel.RELEASE_DAYS.friday,
        '6': TitleModel.RELEASE_DAYS.saturday,
        '7': TitleModel.RELEASE_DAYS.sunday,
    },
    'age_rating': {
        '1': TitleModel.AGE_RATINGS.g,
        '2': TitleModel.AGE_RATINGS.pg,
        '3': TitleModel.AGE_RATINGS.pg_13,
        '4': TitleModel.AGE_RATINGS.r,
        '5': TitleModel.AGE_RATINGS.nc_17,
    },
}


def update_titles_values(apps, schema_editor):
    Title = apps.get_model('titles', 'Title')
    db_alias = schema_editor.connection.alias
    for field, to_replace in replaces.items():
        for old_value, new_value in to_replace.items():
            Title.objects.using(db_alias).filter(**{field: old_value}).update(
                **{field: new_value}
            )


def update_titles_values___reverse(apps, schema_editor):
    Title = apps.get_model('titles', 'Title')
    db_alias = schema_editor.connection.alias
    for field, to_replace in replaces.items():
        for old_value, new_value in to_replace.items():
            Title.objects.using(db_alias).filter(**{field: new_value}).update(
                **{field: old_value}
            )


class Migration(migrations.Migration):

    dependencies = [
        ('titles', '0010_auto_20200808_0004'),
    ]

    operations = [
        migrations.AlterField(
            model_name='title',
            name='age_rating',
            field=models.CharField(
                blank=True,
                choices=[
                    ('G', 'G — нет возрастных ограничений'),
                    ('PG', 'PG — рекомендуется присутствие родителей'),
                    ('PG-13', 'PG-13 — не желателен к просмотру до 13 лет'),
                    ('R', 'R — до 17 лет к просмотру только в присутствии родителей'),
                    ('NC-17', 'NC-17 — до 17 лет к просмотру запрещен'),
                ],
                db_index=True,
                max_length=10,
                null=True,
                verbose_name='age rating',
            ),
        ),
        migrations.AlterField(
            model_name='title',
            name='duration',
            field=models.CharField(
                blank=True, max_length=10, null=True, verbose_name='duration'
            ),
        ),
        migrations.AlterField(
            model_name='title',
            name='inner_status',
            field=models.CharField(
                choices=[
                    ('off', 'off'),
                    ('model', 'on moderation'),
                    ('slug', 'slug duplicate'),
                    ('on', 'on'),
                ],
                db_index=True,
                default='model',
                max_length=10,
                verbose_name='inner_status',
            ),
        ),
        migrations.AlterField(
            model_name='title',
            name='release_day',
            field=models.CharField(
                blank=True,
                choices=[
                    ('mon', 'понедельник'),
                    ('tue', 'вторник'),
                    ('wed', 'среда'),
                    ('thu', 'четверг'),
                    ('fri', 'пятница'),
                    ('sat', 'суббота'),
                    ('sun', 'воскресенье'),
                ],
                max_length=3,
                null=True,
                verbose_name='week day of release',
            ),
        ),
        migrations.AlterField(
            model_name='title',
            name='source',
            field=models.CharField(
                blank=True,
                choices=[
                    ('manga', 'манга'),
                    ('manhwa', 'манхва'),
                    ('game', 'игра'),
                    ('novel', 'ранобэ'),
                    ('original', 'оригинальная идея'),
                    ('book', 'книга'),
                ],
                max_length=10,
                null=True,
                verbose_name='source',
            ),
        ),
        migrations.AlterField(
            model_name='title',
            name='status',
            field=models.CharField(
                choices=[
                    ('released', 'завершенный'),
                    ('ongoing', 'онгоинг'),
                    ('announce', 'анонс'),
                ],
                db_index=True,
                max_length=10,
                null=True,
                verbose_name='status',
            ),
        ),
        migrations.AlterField(
            model_name='title',
            name='type',
            field=models.CharField(
                choices=[
                    ('series', 'TV сериал'),
                    ('movie', 'п/ф'),
                    ('ova', 'OVA'),
                    ('ona', 'ONA'),
                    ('special', 'спешл'),
                ],
                db_index=True,
                max_length=10,
                null=True,
                verbose_name='type',
            ),
        ),
        migrations.AlterField(
            model_name='title',
            name='year_season',
            field=models.CharField(
                blank=True,
                choices=[
                    ('winter', 'зима'),
                    ('spring', 'весна'),
                    ('summer', 'лето'),
                    ('autumn', 'осень'),
                ],
                db_index=True,
                max_length=10,
                null=True,
                verbose_name='season',
            ),
        ),
        migrations.AlterField(
            model_name='watchorder',
            name='type',
            field=models.PositiveSmallIntegerField(
                blank=True,
                choices=[
                    ('series', 'TV сериал'),
                    ('movie', 'п/ф'),
                    ('ova', 'OVA'),
                    ('ona', 'ONA'),
                    ('special', 'спешл'),
                ],
                null=True,
                verbose_name='type',
            ),
        ),
        migrations.operations.RunPython(
            update_titles_values, update_titles_values___reverse
        ),
    ]
